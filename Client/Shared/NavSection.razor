@using Blazored.LocalStorage

<div id="NavSection">
    <a href="login"><i class="las la-sign-in-alt"></i><div class="arrow_box">Sign in (coming soon)</div></a>
    <a href="register"><i class="las la-user-plus"></i><div class="arrow_box">Sign up (coming soon)</div></a>
    <button type="button" @onclick="@ToggleDarkMode"><i class="las la-@UIModeButton"></i><div class="arrow_box">Toggle display mode</div></button>
    <a href="/"><i class="las la-comment-dots"></i><div class="arrow_box">Zen Chat</div></a>
</div>

@code {
    [Parameter] public EventCallback DarkModeToggleCallback { get; set; }
    [Inject] public ILocalStorageService LocalStorageService { get; set; }
    private string UIModeButton { get; set; } = "sun";
    private bool DModeState { get; set; }

    protected override async Task OnInitializedAsync()
    {
        DModeState = await GetOrSetDModeState();

        if (DModeState)
            await ChangeMode();
    }

    public async Task ChangeMode()
    {
        await GetOrSetDModeState(DModeState);

        ToggleDModeButton();
        await DarkModeToggleCallback.InvokeAsync(false);
        StateHasChanged();
    }

    public async Task ToggleDarkMode()
    {
        DModeState = !DModeState;
        await ChangeMode();
    }

    public async Task<bool> GetOrSetDModeState(bool? State = null)
    {
        if (State != null)
        {
            await LocalStorageService.SetItemAsync("DMode", State);
            return (bool)State;
        }

        return await LocalStorageService.GetItemAsync<bool>("DMode");
    }

    public void ToggleDModeButton()
    {
        UIModeButton = UIModeButton == "sun" ? "moon" : "sun";
    }
}